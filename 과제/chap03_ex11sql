/*테이블 생성 : 극장 (theater)*/
CREATE TABLE theater (
 theaterNum INTEGER PRIMARY KEY,
 theaterName VARCHAR(20),
 theaterLocation VARCHAR(20)
);

/*테이블 생성 : 고객 (Users)*/
CREATE TABLE users (
 userNum INTEGER PRIMARY KEY,
 userName VARCHAR(20),
 userAddress VARCHAR(20)
);

/*테이블 생성 : 상영관 (Cinema)*/
CREATE TABLE cinema (
 theaterNum INTEGER NOT NULL,
 cinemaNum INTEGER PRIMARY KEY check(cinemaNum<=10 and cinemaNum>=1),
 movieName VARCHAR(20),
 price INTEGER check(price<=20000),
 seat INTEGER,
 FOREIGN KEY (theaterNum)
 REFERENCES theater (theaterNum)
);

/*테이블 생성 : 예약 (reservation)*/
CREATE TABLE reservation (
 theaterNum INTEGER NOT NULL,
 cinemaNum INTEGER NOT NULL check(cinemaNum<=10 and cinemaNum>=1),
 userNum INTEGER NOT NULL,
 seatNum INTEGER,
 date DATE,
 FOREIGN KEY (theaterNum)
 REFERENCES theater (theaterNum),
 FOREIGN KEY (cinemaNum)
 REFERENCES cinema (cinemaNum),
 FOREIGN KEY (userNum)
 REFERENCES Cusers (userNum)
);

/*테이블 데이터 생성 : 극장 (theater)*/
insert into theater(theaterNum, theaterName, theaterLocation) 
	values(1,"롯데", "잠실");
insert into theater(theaterNum, theaterName, theaterLocation) 
	values(2,"메가", "강남");
insert into theater(theaterNum, theaterName, theaterLocation) 
	values(3,"대한", "잠실");
 
/*테이블 데이터 생성 : 상영관 (cinema)*/
insert into cinema(theaterNum, cinemaNum, movieName, price, seat)
	values(1, 1, "어려운 영화", 15000, 48);
insert into cinema(theaterNum, cinemaNum, movieName, price, seat)
	values(3, 3, "멋진 영화", 7500, 120);
insert into cinema(theaterNum, cinemaNum, movieName, price, seat)
	values(3, 2, "재밌는 영화", 8000, 110);
 
/*테이블 데이터 생성 : 고객 (users)*/
insert into users(userNum, userName, userAddress)
	values(3,"홍길동","강남");
insert into users(userNum, userName, userAddress)
	values(4,"김철수","잠실");
insert into users(userNum, userName, userAddress)
	values(9,"박영희","강남");
 
/*테이블 데이터 생성 : 예약 (reservation)*/
insert into reservation(theaterNum, cinemaNum, userNum, seatNum, date)
	values(3,2,3,15,"2020-09-01");
insert into reservation(theaterNum, cinemaNum, userNum, seatNum, date)
	values(3,3,4,16,"2020-09-01");
insert into reservation(theaterNum, cinemaNum, userNum, seatNum, date)
	values(1,1,9,48,"2020-09-01");
 

/*모든 극장의 이름과 위치를 보이시오.*/
SELECT theaterName, theaterLocation FROM theater;

/*'잠실'에 있는 극장을 보이시오.*/
SELECT * FROM theater WHERE theaterLocation = '잠실';

/*'잠실'에 사는 고객의 이름을 오름차순으로 보이시오.*/
SELECT userName FROM users WHERE userAddress = '잠실';

/*가격이 8,000원 이하인 영화의 극장번호, 상영관번호, 영화제목을 보이시오.*/
SELECT theaterNum, cinemaNum, movieName FROM cinema WHERE price <= 8000;

/*극장 위치와 고객의 주소가 같은 고객을 보이시오.*/
SELECT DISTINCT theater.theaterLocation, users.userName FROM theater, users WHERE theater.theaterLocation = users.userAddress;


/*극장의 수는 몇 개인가?*/
SELECT COUNT(*) FROM theater;

/*상영되는 영화의 평균 가격은 얼마인가?*/
SELECT ROUND(AVG(price)) FROM cinema;

/*2020년 9월 1일에 영화를 관람한 고객의 수는 얼마인가?*/
SELECT COUNT(*) FROM reservation, users WHERE reservation.userNum = users.userNum AND date = '2020-09-01';


/*'대한' 극장에서 상영된 영화제목을 보이시오.*/
SELECT movieName FROM theater, cinema WHERE theater.theaterName = '대한' AND theater.theaterNum = cinema.theaterNum;

/*'대한' 극장에서 영화를 본 고객의 이름을 보이시오.*/
SELECT userName FROM users WHERE userNum IN (SELECT userNum FROM reservation WHERE theaterNum = (SELECT theaterNum FROM theater WHERE theaterName = '대한'));
 
/*대한 극장의 전체 수입을 보이시오.*/
SELECT SUM(price) FROM cinema WHERE cinemaNum IN (SELECT cinemaNum FROM reservation WHERE theaterNum = (SELECT theaterNum FROM theater WHERE theaterName = '대한'));
 
 
/*극장별 상영관 수를 보이시오.*/
SELECT theater.theaterName, COUNT(*) FROM cinema JOIN theater ON cinema.theaterNum = theater.theaterNum GROUP BY cinema.theaterNum;

/*'잠실'에 있는 극장의 상영관을 보이시오.*/
SELECT * FROM cinema WHERE theaterNum IN (SELECT theaterNum FROM theater WHERE theaterLocation = '잠실');

/*2020년09월01일의 극장별 평균 관람 고객 수를 보이시오.*/
SELECT theater.theaterName, COUNT(*) FROM reservation JOIN theater ON reservation.theaterNum = theater.theaterNum WHERE reservation.date = '2020-09-01' GROUP BY reservation.theaterNum;

/*2020년09월01일에 가장 많은 고객이 관람한 영화를 보이시오.*/
SELECT movieName FROM cinema, reservation WHERE cinema.theaterNum = reservation.theaterNum AND cinema.cinemaNum = reservation.cinemaNum AND date LIKE '2020-09-01' GROUP BY reservation.theaterNum , reservation.cinemaNum; 


/*각 테이블에 데이터를 삽입하는 INSERT 문을 하나씩 실행시켜 보시오.*/
/*위에 다 적음*/

/*영화의 가격을 10%씩 인상하시오.*/
UPDATE cinema SET price = price + (price * 0.1);





 
 
